import Head from 'next/head';
import React, { useEffect, useState } from 'react';
import styles from '../../styles/quiz/quizpage.module.css';
import Image from 'next/image';
import { quiz } from "../../Data/Practicetests/spanish"; // Importing the quiz data
import Link from 'next/link';
import { FaLock } from 'react-icons/fa'; // Import a lock icon
import { useSelector } from 'react-redux'; // To access authentication status from Redux
import { Getperformance } from '@/helperfunction/Getperformance';

export default function FrenchQuizes() {
  const { isAuthenticated, user } = useSelector((state) => state.auth); // Access authentication status
  const completedQuizzes = useSelector(state => state.finishedQuizzes.completedQuizzes);
  const [userData, setUserData] = useState(null);
  const subject = "SpanishPT"
  let completedQuizzes1 = completedQuizzes.filter(data=> data.language == subject)

  useEffect(() => {
    const fetchUserData = async () => {
      try {
        const data = await Getperformance(user.userId);
        setUserData(data);
      } catch (err) {
        console.error(err);
        setError("Failed to load user data");
      }
    };

    fetchUserData();
  }, [user.userId]);

  let newcompletedexercise = userData?.completedExercises.filter(data => data.language == subject)
  console.log("new", newcompletedexercise)

  return (
    <>
      <Head>
        <title>Spanish A1 Practice Test</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/logo/newlogo1.png" />
      </Head>
      <main>
        <div className={styles.container}>
          <div className={styles.headcont}>
            <div className={styles.mainheading}>Spanish A1 Practice Test</div>
          </div>

          <div className={styles.cards1}>
            {quiz.map((data, index) => {
              const completedData = newcompletedexercise?.filter(quiz => quiz.exercise.toString() === data.quiz);
              const completedStyles = completedData?.length > 0 ? styles.completed : ''; // Add completed styles
              // Determine if the quiz should be locked
              const isLocked = !isAuthenticated && index > 1;
              return (
                <div key={data.quiz} className={`${styles.card1} ${completedStyles} ${isLocked ? styles.locked : ''}`}>
                  <Link href={`SpanishQuiz/${data.quiz}`} className={styles.link}>
                    <div className={styles.imgcont}>
                      <Image className={styles.img5} src={'/assests/1.png'} width={500} height={500} alt="img" />
                    </div>
                    <div className={styles.info}>
                      <div className={styles.name}>{data.name}</div>
                      <div className={styles.level}>Level: {data.level}</div>
                      <div className={styles.topic}>Topic: {data.topic}</div>
                      <div className={styles.score}>Score: {completedData && completedData.length > 0 ? completedData[0].score : "N/A"}</div>
                    </div>
                  </Link>
                  {isLocked && (
                    <div className={styles.lockOverlay}>
                      <FaLock className={styles.lockIcon} />
                    </div>
                  )}
                </div>
              );
            })}
          </div>
        </div>
      </main>
    </>
  );
}
