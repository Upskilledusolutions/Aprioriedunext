import React, { useEffect, useState } from 'react'
import { cards } from '../../../../Data/Routes/Conversations';
import Head from 'next/head.js';
import styles from '../../../../styles/quiz/conversation.module.css';
import Image from 'next/image.js';
import Link from 'next/link.js';
import { FaLock } from 'react-icons/fa';
import { useRouter } from 'next/router';
import { useSelector } from 'react-redux';

export default function Conversation() {
  const { isAuthenticated, user } = useSelector((state) => state.auth); // Access authentication status
  const [convoData, setconvoData] = useState(null);
  const [isClient, setIsClient] = useState(false);

  const router = useRouter();
  const { course, id } = router.query;
  const somedata = cards.find((data) => data.link2 === course);

  useEffect(() => {
    // Ensure client-side rendering
    setIsClient(true);

    if (somedata) {
      // Dynamically import lesson data
      import(`../../../../Data/Conversationdata/${somedata.data}`)
        .then((module) => {
          setconvoData(module.youdata);
        })
        .catch((error) => {
          console.error('Error loading lesson data:', error);
        });
    }
  }, [somedata]);

  // const videodata = convoData.filter((data) => data.id === id);

  if (!isClient || !somedata) {
    return <div>Loading...</div>;
  }

  return (
    <>
      <Head>
        <title>{convoData?.[id].title}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/logo/newlogo1.png" />
      </Head>
      <main>
        <div className={styles.container1}>
          <div className={styles.headcont}>
            <div className={styles.mainheading}>{convoData?.[id-1].title}</div>
          </div>
          <div className={styles.flex}>
          <div className={styles.topcontainer}>
            <div className={styles.topimgcontainer}>
              <iframe className={styles.video} width="560" height="315" src={convoData?.[id-1].youtube} title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
              <div className={styles.info}>
              <h4 className={styles.title2}>{convoData?.[id-1].title}</h4>
              <p className={styles.dsec2}>{convoData?.[id-1].desc}</p>
              </div>
            </div>
          </div>
            <div className={styles.Adcontainer}>
            {convoData?.slice(0,8).map((data, index) => {
      return (
        <div key={data.id} className={styles.videocontainer1}>
          {user.trial && data.id < 3 || user.type === 'all' || !user.trial ?  
          <Link className={styles.link1} href={`/Conversations/SingleConversation/${somedata.link2}/${data.id}`}>
        <div className={styles.imgcont4}>
        <div className={styles.logocont}>
          <Image className={styles.imagelogo} src={'/youtube/youtube.png'} width={400} height={180} alt='image'/>
          </div>
          <Image className={styles.image4} src={data.url} width={400} height={180}/>
        </div>
        <div>
          <h3 className={styles.title4}>{data.title}</h3>
          <p className={styles.desc4}>{data.desc.slice(0,30)}...</p>
        </div>
        </Link> : <div className={styles.locked1}>
          <div className={styles.lockOverlay}><FaLock /><p>Locked</p></div>
         <div className={styles.imgcont4}>
         <div className={styles.logocont}>
           <Image className={styles.imagelogo} src={'/youtube/youtube.png'} width={400} height={180} alt='image'/>
           </div>
           <Image className={styles.image4} src={data.url} width={400} height={180}/>
         </div>
         <div>
           <h3 className={styles.title4}>{data.title}</h3>
           <p className={styles.desc4}>{data.desc.slice(0,30)}...</p>
         </div>
         </div>
         }
       

      </div>
      )
    })}
            </div>
          </div>
        </div>
    </main>
    </>
  )
}
